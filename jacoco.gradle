
task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = true
    }

    def fileFilter = ['android/databinding/**/*.class',
                      '**/android/databinding/*Binding.class',
                      '**/android/databinding/*',
                      '**/androidx/databinding/*',
                      '**/BR.*',
                      '**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/*_MembersInjector.class',
                      '**/Dagger*Component.class',
                      '**/Dagger*Component$Builder.class',
                      '**/*Module_*Factory.class',
                      '**/di/module/*',
                      '**/*_Factory*.*',
                      '**/*Module*.*',
                      '**/*Dagger*.*',
                      '**/*Hilt*.*',
                      '**/*MapperImpl*.*',
                      '**/*$ViewInjector*.*',
                      '**/*$ViewBinder*.*',
                      '**/BuildConfig.*',
                      '**/*Component*.*',
                      '**/*BR*.*',
                      '**/Manifest*.*',
                      '**/*$Lambda$*.*',
                      '**/*Companion*.*',
                      '**/*Module*.*',
                      '**/*Dagger*.*',
                      '**/*Hilt*.*',
                      '**/*MembersInjector*.*',
                      '**/*_MembersInjector.class',
                      '**/*_Factory*.*',
                      '**/*_Provide*Factory*.*',
                      '**/*Extensions*.*',
                      '**/*$Result.*',
                      '**/*$Result$*.*']

    def debugTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/debug", excludes: fileFilter)
    def mainSrc = fileTree(dir: "${projectDir}/src/main/java", excludes: fileFilter)

    getSourceDirectories().setFrom(files([mainSrc]))
    getClassDirectories().setFrom(files([debugTree]))

    //def unitTestsData = "$project.buildDir/jacoco/testDebugUnitTest.exec"
    def unitTestsData = "$project.buildDir/jacoco/testReleaseUnitTest.exec"
    def androidTestsData = fileTree(dir: "${buildDir}/outputs/code_coverage/debugAndroidTest/connected/",
            includes: ["**/*.ec"])
    getExecutionData().setFrom(files([unitTestsData, androidTestsData]))

}